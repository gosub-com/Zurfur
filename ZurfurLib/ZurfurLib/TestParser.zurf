pragma NoParse // Comment out this line to see parse errors

// This file is to test the parse, make sure error
// messages look good and no crashes, etc.


mod TestSyntax

use Zurfur



fun A() { } // Expecting a type name
fun A() void{ } // Duplicate
fun B() int { } // Duplicate
fun B() f32 { } // Duplicate
fun C(a int, a int) void { } // Duplicate parameter
fun D<X,X>(a X) void { } // Duplicate type parameter
fun E<X>(a Y) void { } // Unresolved type

// If we allow embedded functions and types
type A { fun A() void { } } // Same name as parent
type C<T> { type D<T> { } } // Same type arg name as parent
type B<T> { fun A<T>() void { } } // Same type arg name as parent


// Try to give good info at the end of each line
fun new(a i8) void // Compound statement error
fun
fun A
fun B(
fun C(a
fun E(a int
fun F(a int,
fun G(a int, b
fun J(a, x int) 
fun H(a int, b int) void  // Compound error on this line (not next)
fun I(a int, b int) void

fun J(a int, x int) void
NoCompoundHere()

// Error in 'fun' declaration still parses function after '{'
fun K(a int, x)  void
    if a > 3   // Error: Next line doesn't look like a compound
    a += 1


    if a > 3
        a+=1
         b+=1  // Error: Compound statement alignment

    if a >
    a+= 1       // No error here because it's marked on the previous line

    if a >
    a+= 1       // No error here because it's marked on the previous line


    if a > 3 ret 4 // Error: Compound must be on next line


    if

    if a

    if a>

    if a>b        


// TBD: The curly brace should be accepted as part of the `fun` declaration
fun K(a int, x) hello world void
{
}
    