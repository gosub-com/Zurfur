

module Zurfur.Io


interface Reader
{
    afun mut Read(data mut []byte) int error impl
    // TBD: Since most streams have an underlying
    // buffer,  would it make sense to add sync
    // functions ReadableNow and ReadNow?
}

interface Writer
{
    afun mut Write(data []byte) int error impl
    afun mut Flush() error impl
    // TBD: Since most streams have an underlying
    // buffer,  would it make sense to add sync
    // functions WritableNow and WriteNow?
}

enum SeekOrigin { Begin; Current; End }

interface Seeker
{
    get Length() int impl
    get Position() int impl
    set Position(value int) impl
    afun mut Seek(offset int, origin SeekOrigin) error impl
}


interface FileStream
{
}

type File
{
    fun pub static Open(file str) FileStream error:
        return todo()
}