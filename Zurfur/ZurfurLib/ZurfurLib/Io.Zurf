

module Zurfur.Io


interface Reader
{
    afun mut Read(data mut []byte) int err impl
}

interface Writer
{
    afun mut Write(data []byte) int err impl
    afun mut Flush() err impl
}

enum SeekOrigin { Begin; Current; End }

interface Seeker
{
    afun mut Seek(offset int, origin SeekOrigin) int err impl
    aget Length() int err { todo() }
    aget Position() int err { todo() }
    aset Position(value int) err { todo() }
}


interface FileStream
{
}

type File
{
    fun pub static Open(file str) FileStream err:
        return todo()
}