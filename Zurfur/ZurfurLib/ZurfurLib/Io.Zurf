

namespace Zurfur.Io


interface Reader
{
    afun mut Read(data mut []byte) int error youdo
    // TBD: Since most streams have an underlying
    // buffer,  would it make sense to add sync
    // functions ReadableNow and ReadNow?
}

interface Writer
{
    afun mut Write(data []byte) int error youdo
    afun mut Flush() error youdo
    // TBD: Since most streams have an underlying
    // buffer,  would it make sense to add sync
    // functions WritableNow and WriteNow?
}

enum SeekOrigin { Begin; Current; End }

interface Seeker
{
    get Length() int youdo
    get Position() int youdo
    set Position(value int) youdo
    afun mut Seek(offset int, origin SeekOrigin) error youdo
}


interface FileStream
{
}

type File
{
    pub static fun Open(file str) FileStream error:
        return todo()
}