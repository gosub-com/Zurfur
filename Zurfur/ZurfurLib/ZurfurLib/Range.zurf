namespace Zurfur

/// Span (TBD: Ensure type system doesn't need both MutSpan and RoSpan)
pub struct ref ro Span<T>
{
    ro @owner ?object
    ro @data *T
    pub ro @Count int
    pub fun operator[](index int) ref T
    {
        get
        {
            if cast(uint)index >= cast(uint)Count
                { throw IndexOutOfRangeException() }
            return unsafe(cast(ref T)(data + index))
        }
    }
    
    pub fun operator[](r Range<int>) Span<T>
    {
        get
        {
            if r.Low < 0 || r.High < r.Low
                || cast(uint)r.High > cast(uint)Count
            {
                throw IndexOutOfRangeException()
            }
            return unsafe(Span<T>(owner, data+r.Low, r.High-r.Low))
        }
    }
}