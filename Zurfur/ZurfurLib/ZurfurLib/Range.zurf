use Zurfur
use Zurfur.Operators

module Zurfur


type pub Range<T>(start T, end T)
    impl GetIterator<T>, OpContains<T>
    where T is NumOps
{
    get count() T:
        return end-start
        
    fun pub getIterator() RangeIterator<T>:
        return RangeIter<T>(start, end)

    fun pub contains(value T) bool:
        return T >= start && T < end
}

type pub RangeIterator<T>(start T, end T)
    impl Iterator<T>
    where T is NumOps
{
    get countHint() T:
        return end-start
        
    get next() ?T:
        if start < end:
            return replace(ref start, start+1)
        return null
        
}