namespace Zurfur

pub class List<T> 
    implements IList<T>
{
    items = Array<T>()
    count int

    pub func new() => todo()
    pub func new(capacity int) => todo()
    pub func new(items ICollection<T>) => todo()
    
    pub prop Count int => count

    pub func operator[](index int) T { get => todo() set => todo() }
    pub func operator[](index Range) Span<T> => items[index]

    pub mut func Add(item T) => todo()
    pub mut func Clear() => todo()
    pub mut func Insert(index int, item T) => todo()
    pub mut func Insert(index int, items ICollection<T>) => todo()
    pub mut func Remove(index int) => todo()
    pub mut func Remove(range Range) => todo()
    
    pub func Convert<Tout>(c func(input T) Tout) => todo() 
    pub func ForEach(r func(input T)) => todo()
    pub func Find(p func(input T)) => todo()
        
}