///
/// This is where we will keep syntactically correct, but
/// non runnable unit tests.  As they become runnable,
/// they will be moved to Zurfur.UnitTests or
/// 
/// These tests are really big now, but they will be broken
/// up and moved as individual features get implemented.
///

namespace Zurfur.UnitTests.Future

static func test_ForSimple()
{

    @count int
    for @a in 0..10
    {
        if a == 2
            => count += 100
        else if a == 3 || a == 4
            => count += 1000
        else if a == 5
        {
            count += 10000
            count += 10000
        }
        else
            => count += 100000
        count += a
    }
    Console.Log("For loop: " + count == 622145 ? "Pass" : "Fail")
}


pub class Example
{
    info str                // Private string initialized to ""	
    f1 Array<int>({1,2,3})              // Initialized array
    f2 List<str>({"Hello", "World"})    // Initialized list
    f3 Map<str,int>({"A":1, "B":2})     // Initialized map
    pub ro Header str("Zurfur")         // Public read only string
    pub func F(a int) str => Header+a   // Member function
    pub prop P str => Header + info     // Property
}
pub func Example::MyExtension() => F()  // Extension method

pub func Example::MyExtension()
{
    @a = Map<str,int>({{"A",1},{"B",2},{"C",3}})
    @b = Map<str,int>({"A":1,"B":2,"C":3})
}