
mod Zurfur



[pub]
type Iterable<Item> interface
    fun get iterator() Iterator<Item>


// Implement this on all iterators
[pub]
type Iterator<Item> interface

    // Return the next item, or null if it doesn't exist
    fun mut next() ?Item


[pub]
fun mut Iterator.toArray() Array<My.Item>
    return my.toList().toArray()

[pub]
fun mut Iterator.toList() List<My.Item>
    @list = List<My.Item>()
    while my.next()@item
        list.push(item)
    return list
    
    
    