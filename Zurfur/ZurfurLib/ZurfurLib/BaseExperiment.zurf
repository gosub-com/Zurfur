namespace Zurfur


/// All variable sized objects must inherit from this
/// class and cannot be unsealed
[Unsealed1]
pub class ArrayBase<T>
{
    static func default() => ArrayBase<T>()
    
    pub Count int
        
    func new(count int) => todo() // Allocate object on heap
        
    protected prop DataSpan Span<T> => todo()
        
    protected unsafe prop DataPointer *T 
        => cast *T(cast *byte(this) + Sizeof(ArrayBase))
}

// Array of constant size
pub class Array<T>
    extends ArrayBase<T>
    implements IArray<T>, IMutArray<T>
    where T is struct
{
    pub const MaxSize int = int.MaxInt/2
    pub static ro Empty = Array<T>()

    pub func new(count int) => todo()
    pub func new(items ICollection<T>) => todo()
    
    pub func operator[](index int) T => todo()
    pub func operator[](range Range) MutMemory<T> => todo()
}