namespace Zurfur

/// Read only span
pub struct ref Span<T>
{
    @data ref T
    pub @Count int
    pub operator[](index int) ro ref T => todo()
    pub operator[](index Range) Span<T> => todo()
}

/// Mutable span
pub struct ref MutSpan<T>
{
    @data ref T
    pub @Count int
    pub operator[](index int) ref T => todo()
    pub operator[](index Range) MutSpan<T> => todo()
    operator implicit(from MutSpan<T>) Span<T> => todo()
}

/// Read only memory span
[NoTear]
pub struct Memory<T>
{
    @data        object
    @offset      xint
    pub @Count   int
    pub operator[](index int) ro ref T => todo()
    pub operator[](index Range) Memory<T> => todo()
    operator implicit(from Memory<T>) Span<T> => todo()
}

/// Mutable memory span
[NoTear]
pub struct MutMemory<T>
{
    @data        object
    @offset      xint
    pub @Count   int
    pub operator[](index int) ref T => todo()
    pub operator[](index Range) MutMemory<T> => todo()
    operator implicit(from MutMemory<T>) Memory<T> => todo()
    operator implicit(from MutMemory<T>) Span<T> => todo()
    operator implicit(from MutMemory<T>) MutSpan<T> => todo()
}