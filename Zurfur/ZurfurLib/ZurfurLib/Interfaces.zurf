
// This defines interfaces for:
//      Zurfur.Markers
//      Zurfur.Operators

module Zurfur

module Zurfur.Markers



pub interface Copy { }

module Zurfur.Operators

// Equality for containers and sorting (NaN == NaN, Nan < -Inf)
pub interface OpEq<Rhs>
    fun opEq(rhs Rhs) bool impl

// Comparison for containers and sorting (NaN == Nan, Nan < -Inf)
pub interface OpCmp<Rhs> where This is OpEq<Rhs>
    fun opCmp(rhs Rhs) int impl

// Logical equality (e.g. -0 == +0, NaN == NaN even if bit pattern is different)
// TBD: Implemented by compiler
pub interface GetHash
    fun getHash() int impl

// Equality for floating point numbers (NaN != NaN)
// Not implemented for most other types (e.g. int and str)
pub interface OpEqPartial<Rhs>
    fun opEqPartial(rhs Rhs) bool impl

// Comparison for floating point numbers (NaN is unordered)
// Not implemented for most other types (e.g. int, str)
pub interface OpCmpPartial<Rhs> where This is OpEqPartial<Rhs>
    fun opCmpPartial(rhs Rhs) ?int impl

pub interface OpIn<Rhs> where This is OpEq<Rhs>
    fun opIn(rhs Rhs) bool impl
    
pub interface OpAdd<Rhs, Out>
    fun opAdd(rhs Rhs) Out impl
    
pub interface OpSub<Rhs, Out>
    fun opSub(rhs Rhs) Out impl
    
pub interface OpNeg<Out>
    fun opNeg() Out impl
    
pub interface OpMul<Rhs, Out>
    fun opMul(rhs Rhs) Out impl
    
pub interface OpDiv<Rhs, Out>
    fun opDiv(rhs Rhs) Out impl
    
pub interface OpRem<Rhs, Out>
    fun opRem(rhs Rhs) Out impl

pub interface OpNext
    fun opNext() This impl

pub interface Drop
    fun mut drop(flags int) impl
    
pub interface Clone
    fun mut clone() This impl

